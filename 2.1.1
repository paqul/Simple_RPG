from __future__ import print_function
import random
import sys
import tkinter
from tkinter import messagebox
import os
global zmienna


#--------------------------------status-----------------------------------------#
class moj_status_poczatkowy(object):
    def __init__(self, HP_gracza, EXP, level, Bonus_DMG, HP_maksymalne, flag):
        self.HP_gracza = HP_gracza
        self.EXP = EXP
        self.level = level
        self.Bonus_DMG = Bonus_DMG
        self.HP_maksymalne = HP_maksymalne
        self.flag = str(flag)
    def __repr__(self):
        return "(%d ,%d ,%d, %d, %d, %s)" % (self.HP_gracza, self.EXP, self.level, self.Bonus_DMG, self.HP_maksymalne, self.flag)
    def status(self, HP_gracza, EXP, level, Bonus_DMG, HP_maksymalne, flag):
        status = [HP_gracza, EXP, level, Bonus_DMG, HP_maksymalne, str(flag)]
        return status

#-------------------przeciwnicy--------------------------------------------------#
class enemy(object):
    def __init__(self, HP, dmg):
        self.HP = HP
        self.dmg = dmg

class goblin(enemy):
    def __init__(self):
        self.name = "goblin"
        self.HP = 4
        self.dmg = 1
        self.EXP = 8
        print("Spotykasz %sa !" % (self.name))
    def status(self):
        return (self.name, self.HP, self.dmg, self.EXP)

class ork(enemy):
    def __init__(self):
        self.name = "ork"
        self.HP = 8
        self.dmg = random.randrange(2,5)
        self.EXP = 20
        print("Spotykasz %sa !" % (self.name))
    def status(self):
        return (self.name, self.HP, self.dmg, self.EXP)

class szczur(enemy):
    def __init__(self):
        self.name = "szczur"
        self.HP = 2
        self.dmg = 1
        self.EXP = 2
        print("Spotykasz %sa !" % (self.name))
    def status(self):
        return (self.name, self.HP, self.dmg, self.EXP)

class towdi(enemy):
    def __init__(self):
        self.name = "Tołdi Kału tzw. wierny sługus Last Bossa"
        self.HP = 50
        self.dmg = random.randrange(4,11)
        self.EXP = 500
        print("Spotykasz %sa !" % (self.name))
    def status(self):
        return (self.name, self.HP, self.dmg, self.EXP)

class mikstura(object):
    def __init__(self):
        self.mala = "mala"
        self.HPregen_mala = 2
        self.normalna = "normalna"
        self.HPregen_normalna = 4
        self.duza = "duza"
        self.HPregen_duza = 10
    def mala_mix(self):
        return(self.mala, self.HPregen_mala)
    def normalna_mix(self):
        return(self.normalna, self.HPregen_normalna)
    def duza_mix(self):
        return(self.duza, self.HPregen_duza)


#------------------------------grafika----------------------------------#

class Window(tkinter.Frame):

    def __init__(self, master=None):
        tkinter.Frame.__init__(self, master) # daje mozliwosc wywolania  okien
        zmienna = tkinter.StringVar()
        self.master = master
        # text=None

        self.init_window3()
        self.init_window()
        self.init_window2()
        zmienna.set('sdsdsd')


    def init_window(self):

        self.master.title("Simple RPG")
        labelframe1 = tkinter.LabelFrame(text="Action", relief="raised", height=10, width=10)

        MainMenu = tkinter.Menu(self.master)    # dodanie głownego menu do okna
        self.master.config(menu=MainMenu)       # konfiguracja glownjego menu w oknie


        file = tkinter.Menu(MainMenu)
        MainMenu.add_cascade(label='File', menu=file)
        file.add_command(label='Start Game', command=self.main)  # , command=self.main)
        file.add_command(label='Save - not work')
        file.add_command(label='Exit', command=self.client_exit)

        edit = tkinter.Menu(MainMenu)
        MainMenu.add_cascade(label='Edit', menu=edit)
        edit.add_command(label='Undo', state="disabled")

        about = tkinter.Menu(MainMenu)
        MainMenu.add_cascade(label='About', menu=about)
        about.add_command(label='About',  command=self.about_x)

        north = tkinter.Button(labelframe1, text="\'NORTH\'", fg="blue", height=4, width=25, bd=4)
        north.place(x=170, y=10)

        south = tkinter.Button(labelframe1, text="\'SOUTH\'", fg="blue", cursor="dot", height=4, width=25, bd=4)
        south.place(x=170, y=310)

        east = tkinter.Button(labelframe1, text="\'EAST\'", fg="blue", height=10, width=10, bd=4)
        east.place(x=20, y=110)

        west = tkinter.Button(labelframe1, text="\'WEST\'", fg="blue", height=10, width=10, bd=4)
        west.place(x=420, y=110)

        walcz = tkinter.Button(labelframe1, text="\'FIGHT!\'", fg="red", height=10, width=10, bd=4)
        walcz.place(x=170, y=110)

        uciekaj = tkinter.Button(labelframe1, text="\'RUN AWAY\'", fg="green", height=10, width=10, bd=4)
        uciekaj.place(x=270, y=110)

        labelframe1.pack(side=tkinter.LEFT, fill=tkinter.BOTH, expand=1, anchor=tkinter.CENTER)

    def init_window2(self):

        labelframe2 = tkinter.LabelFrame(text="Map", relief="flat", height=10, width=10)
        labelframe2.pack(side=tkinter.TOP, fill=tkinter.BOTH, expand=1)
        img = tkinter.PhotoImage(file="Pusta_Mapa.png").zoom(x=4, y=4)
        imgLabel = tkinter.Label(image=img, relief="flat")
        imgLabel.image = img
        imgLabel.pack(side=tkinter.BOTTOM, fill=tkinter.BOTH, expand=1, padx=50, pady=20)


    def init_window3(self):

        labelframe3 = tkinter.LabelFrame(text="Event", relief="raised", height=350, width=100)
        # zmienna = tkinter.StringVar()
        # zmienna.set('START')
        # frame3 = tkinter.Message(labelframe3, textvariable=zmienna, width=500)
        labelframe3.pack(side=tkinter.BOTTOM, fill=tkinter.X, expand=0)
        # frame3.pack(padx=150, pady=130)

    def init_text(self, x):

        labelframe3 = tkinter.LabelFrame(text="Event", relief="raised", height=350, width=100)
        zmienna = tkinter.StringVar()
        zmienna.set(x)
        frame3 = tkinter.Message(labelframe3, textvariable=zmienna, width=500)
        labelframe3.pack(side=tkinter.BOTTOM, fill=tkinter.X, expand=0)
        frame3.pack(padx=150, pady=130)



    def client_exit(self):
        answer=messagebox.askquestion("Game Over ?", 'Are U sure?')
        if answer == "yes":
            exit()

    def about_x(self):
        messagebox.showinfo("Simple RPG - Creator: Paqul", "This is Interface to my first Text RPG Game \n Have Fun ^^")

    # -------------------------GRA-------------------------------------------#
    def main(self):
        try:
            os.remove("trofea_File.txt")
        except:
            pass
        finally:
            print("Chcesz zagrac wojownikiem(medium), magiem(hard) czy assassinem(easy) ? (woj/mag/asa):")
            self.init_text("TEST")
            staty_gracza = self.wybor_postaci()
            aktualny_status = moj_status_poczatkowy(staty_gracza[0], staty_gracza[1], staty_gracza[2], staty_gracza[3],
                                                    staty_gracza[4], staty_gracza[5]).status(staty_gracza[0],
                                                                                             staty_gracza[1],
                                                                                             staty_gracza[2],
                                                                                             staty_gracza[3],
                                                                                             staty_gracza[4],
                                                                                             staty_gracza[5])
            input()
            print("Rozpoczynasz GRE - prostego RPGA")
            # app.init_window3(tkinter.Message(textvariable="Chcesz zagrac wojownikiem(medium), magiem(hard) czy assassinem(easy) ? (woj/mag/asa):", width=500))
            print(
                "Czy chcesz wskoczyć do studni prowadzącej do mrocznego lochu gdzie będziesz brodził w kale po kostki do samego końca? (tak/nie)")
            while True:
                decyzja = input()
                if decyzja == "nie":
                    print("Jestes rozsadnym czlowiekiem, nie ma sensu sie wkurzać i męczyć...")
                    input()
                    print(
                        "Może nie udało Ci się pokonać Last Bossa, ale udało Ci się ukończyć prostego RPGa bez stesów i większego wysiłku")
                    print("CONGRATULATIONS!")
                    break
                elif decyzja == "tak":
                    self.bot(aktualny_status)
                else:
                    print("Wpisz poprawnie słowo 'tak' lub slowo 'nie', Chcesz tam wchodzić czy nie?!")
            self.GAME_OVER()

    def wybor_postaci(self):
        counter = 0
        while True:
            player = input()
            if player == "woj":
                return self.warrior()
            elif player == "mag":
                return self.mage()
            elif player == "asa":
                return self.assasin()
            else:
                print("fail - musisz wpisac 'woj' lub 'mag' lub 'asa' w zaleznosci kim chcesz grac")
                counter += 1
                if counter == 3:
                    print(
                        "Wybacz, ale jesli nie umiesz postepowac wg instukcji to nie chce z tobą wspolpracowac - Ponad 3 razy SFAILOWALES!")
                    input()
                    self.GAME_OVER()

    def warrior(self):
        print("Twoje statystyki to: ")
        HP_maksymalne = 10
        HP = HP_maksymalne
        print("HP: %d /" % HP, HP_maksymalne)
        print("Obrazenia jakie zadajessz to 1 - 4, ponieważ masz miecz")
        EXP = 0
        level = 1
        Bonus_DMG = 0
        flag = "war"
        return HP, EXP, level, Bonus_DMG, HP_maksymalne, flag

    def mage(self):
        print("Twoje statystyki to: ")
        HP_maksymalne = 4
        HP = HP_maksymalne
        print("HP: %d /" % HP, HP_maksymalne)
        print("Obrazenia jakie zadajessz to 1 - 2, uzyżywając magii")
        print("Ale ze wzrostem twojej mocy twoje czary staja sie bardziej potezne")
        EXP = 0
        level = 1
        Bonus_DMG = 0
        flag = "mag"
        return HP, EXP, level, Bonus_DMG, HP_maksymalne, flag

    def assasin(self):
        print("Twoje statystyki to: ")
        HP_maksymalne = 8
        HP = HP_maksymalne
        print("HP: %d /" % HP, HP_maksymalne)
        print("Obrazenia jakie zadajessz to 1 - 6, używając sztyletów")
        print("Nigdy nie wiesz gdy kiedy możesz trafić przeciwnika krytycznie")
        EXP = 0
        level = 1
        Bonus_DMG = 0
        flag = "asa"
        return HP, EXP, level, Bonus_DMG, HP_maksymalne, flag

    def wywolaj_status(self, aktualny_status):
        print("|--Klasa--|--LVL--|--HP --|--HPmax--|--Exp --|--Damage zadawany--|")
        if aktualny_status[5] == "war":
            print("|--", aktualny_status[5], "--|--", aktualny_status[2], "--|--", aktualny_status[0], "--|--",
                  aktualny_status[3], "--|--", aktualny_status[1], "--|-----", 1 + aktualny_status[4], "-",
                  4 + aktualny_status[4], "-------|")
        elif aktualny_status[5] == "mag":
            print("|--", aktualny_status[5], "--|--", aktualny_status[2], "--|--", aktualny_status[0], "--|--",
                  aktualny_status[3], "--|--", aktualny_status[1], "--|-----", 1 + aktualny_status[4], "-",
                  2 + aktualny_status[4], "------|")
        elif aktualny_status[5] == "asa":
            print("|--", aktualny_status[5], "--|--", aktualny_status[2], "--|--", aktualny_status[0], "--|--",
                  aktualny_status[3], "--|--", aktualny_status[1], "--|-----", 1 + aktualny_status[4], "-",
                  6 + aktualny_status[4], "------|")
        print("|---------|-------|-------|---------|--------|-------------------|")
        return

    def level(self, aktualny_status):
        if aktualny_status[5] == "war":
            if aktualny_status[1] < 25:
                aktualny_status[2:5] = 1, 10, 0
            elif aktualny_status[1] >= 25 and aktualny_status[1] < 50:
                aktualny_status[2:5] = 2, 15, 2
            elif aktualny_status[1] >= 50 and aktualny_status[1] < 100:
                aktualny_status[2:5] = 3, 22, 5
            elif aktualny_status[1] >= 100 and aktualny_status[1] < 200:
                aktualny_status[2:5] = 4, 30, 8
            elif aktualny_status[1] >= 200 and aktualny_status[1] < 350:
                aktualny_status[2:5] = 5, 50, 13
            else:
                aktualny_status[2:5] = 6, 100, 50
        elif aktualny_status[5] == "mag":
            if aktualny_status[1] < 25:
                aktualny_status[2:5] = 1, 4, 0
            elif aktualny_status[1] >= 25 and aktualny_status[1] < 50:
                aktualny_status[2:5] = 2, 8, 4
            elif aktualny_status[1] >= 50 and aktualny_status[1] < 100:
                aktualny_status[2:5] = 3, 12, 10
            elif aktualny_status[1] >= 100 and aktualny_status[1] < 200:
                aktualny_status[2:5] = 4, 16, 15
            elif aktualny_status[1] >= 200 and aktualny_status[1] < 350:
                aktualny_status[2:5] = 5, 25, 25
            else:
                aktualny_status[2:5] = 6, 50, 100
        elif aktualny_status[5] == "asa":
            if aktualny_status[1] < 25:
                aktualny_status[2:5] = 1, 8, 0
            elif aktualny_status[1] >= 25 and aktualny_status[1] < 50:
                aktualny_status[2:5] = 2, 12, 3
            elif aktualny_status[1] >= 50 and aktualny_status[1] < 100:
                aktualny_status[2:5] = 3, 18, 8
            elif aktualny_status[1] >= 100 and aktualny_status[1] < 200:
                aktualny_status[2:5] = 4, 25, 12
            elif aktualny_status[1] >= 200 and aktualny_status[1] < 350:
                aktualny_status[2:5] = 5, 33, 20
            else:
                aktualny_status[2:5] = 6, 40, 75
        return aktualny_status

    # --------------------------------spotkanie -----------------------------------------#

    def przejscie(self, HP_gracza_aktualne, EXP_gracza_aktualny, Bonus_DMG, HP_maksymalne, flag):
        # def przejscie(aktualny_status[0], aktualny_status[1], aktualny_status[4], aktualny_status[3], aktualny_status[5]):
        if EXP_gracza_aktualny >= 325:
            print(
                "Czujesz że jesteś już wystarczająco poteżny by zmierzyć się z FINAL BOSSEM, Czy chcesz tego? (tak/nie)")
            while True:
                final_decision = input()
                if final_decision == "tak":
                    print(
                        "... Z CALEGO lochu, spływa CALY kał w którym brodziłes az do teraz, w jedno miejsce znajdujace sie przed toba...")
                    input()
                    print("... I powstaje KAPITAN PLANETA, (to nie ta bajka - sorrki) - TO jest celowy BUG :)")
                    input()
                    print("... I powstaje FINAL BOSS - +K R Ó L O W A + K A L U !+")
                    input()
                    self.walka(HP_gracza_aktualne, 100, 5, EXP_gracza_aktualny, 1000000, Bonus_DMG, HP_maksymalne, flag)
                    input()
                    print(
                        "Udało Ci się pokonać Last Bossa i ukończyć prostego RPGa!!! Królowa Kału rozpada sie na miliony fragmentów ekskrementu i znika...")
                    input()
                    print("Następuje silne trzesienie ziemi, a loch zaczyna się walić...")
                    input()
                    print(
                        "Przed tobą pojawia się portal - na ten moment wydaje się jedynym rozsądnym miejscem ucieczki z lochu.")
                    print("Czy chcesz przejść przez portal? (tak/nie)")
                    while True:
                        koncowka = input()
                        if koncowka == "tak":
                            print(
                                "Przechodzisz przez portal i znadujesz sie na powierzchni, na dziedzińcu w jakimś zamku...")
                            print("CONGRATULATIONS!")
                            print("Udało Ci się ukończyć prostego RPGa !!!!")
                            self.GAME_OVER()
                        elif koncowka == "nie":
                            print(
                                "Zbyt długo sie wachasz czy przejsc przez portal i dostajesz spadającymi skałami w łeb i umierasz...")
                            self.GAME_OVER()
                        else:
                            print("Wpisz 'tak' lub 'nie' ")
                    return
                elif final_decision == "nie":
                    return
                else:
                    print("tak czy nie ?!")
        else:
            return

    def spotkanie(self, aktualny_status):
        zaszlo = random.randrange(0, 101)
        aktualny_status = self.level(aktualny_status)
        self.przejscie(aktualny_status[0], aktualny_status[1], aktualny_status[4], aktualny_status[3], aktualny_status[5])
        if zaszlo > 33 and zaszlo <= 75:
            print("Na swojej drodze spotykasz przeciwnika, przygotuj sie do walki !")
            losuj_przeciwnika = random.randrange(1, 101)
            if losuj_przeciwnika >= 1 and losuj_przeciwnika <= 40:
                my_enemy = szczur()
            elif losuj_przeciwnika > 40 and losuj_przeciwnika < 80:
                my_enemy = goblin()
            elif losuj_przeciwnika == 100:
                my_enemy = towdi()
            else:
                my_enemy = ork()
            staty = my_enemy.status()
            Staty_po_starciu = self.walka(aktualny_status[0], staty[1], staty[2], aktualny_status[1], staty[3],
                                     aktualny_status[4], aktualny_status[3], aktualny_status[5])
            aktualny_status[0] = Staty_po_starciu[0]
            aktualny_status[1] = Staty_po_starciu[1]
            del my_enemy
            return aktualny_status
        elif zaszlo > 75 and zaszlo <= 100:
            jaki_mix = random.randrange(0, 101)
            aktualny_status = self.level(aktualny_status)
            elixir = mikstura()
            if jaki_mix < 40:
                print("Znajdujesz małą miksturke leczącą, która odrobinę poprawia twój stan zdrowia")
                Lecz = elixir.mala_mix()
            elif jaki_mix >= 40 and jaki_mix < 80:
                print("Znajdujesz miksturke leczącą, która Cie leczy")
                Lecz = elixir.normalna_mix()
            else:
                print("Znajdujesz dużą miksture leczącą, która znacząco poprawia twój stan zdrowia")
                Lecz = elixir.duza_mix()
            input()
            aktualny_status[0] += Lecz[1]
            odpowiedz = self.porownanie_HP_HPmax(aktualny_status[0], aktualny_status[3])
            aktualny_status[0] = odpowiedz[0]
            aktualny_status[3] = odpowiedz[1]
            del elixir
            return aktualny_status
        else:
            print("Wchodzisz do nowego obszaru i nic sie nie dzieje")
            input()
            return aktualny_status

    # ------------------------------------walka------------------------------#
    def walka(self, HP_gracza, HP_potwora, dmg_potwora, EXP_gracza_aktualny, EXP_potwora, Bonus_DMG, HP_maksymalne, flag):
        if HP_potwora > 99:
            print("Rozpoczynasz walke...")
            input()
            HP_potwora_maksymalne = HP_potwora
            while HP_gracza >= 1:
                if flag == "war":
                    damage_zadane = random.randrange(1, 5) + Bonus_DMG
                elif flag == "mag":
                    damage_zadane = random.randrange(1, 3) + Bonus_DMG
                elif flag == "asa":
                    damage_zadane = random.randrange(1, 7) + Bonus_DMG
                HP_potwora = HP_potwora - damage_zadane
                HP_gracza = HP_gracza - dmg_potwora
                naloz_gracz = self.nakladka_klimat(HP_gracza, HP_maksymalne)
                naloz_potwor = self.nakladka_klimat(HP_potwora, HP_potwora_maksymalne)
                print("Zadales przeciwnikowi obrażenia i jest %s" % naloz_potwor)
                print("Przeciwnik uderzył Cie i jesteś %s" % naloz_gracz)
                if HP_gracza <= 0:
                    print("GAME OVER ! ! !")
                    self.GAME_OVER()
                    break
                elif HP_potwora <= 0:
                    print("Wygrales walke!")
                    self.trofea_fun(HP_potwora_maksymalne)
                    HP_po_walce = HP_gracza
                    EXP_gracza_aktualny += EXP_potwora
                    return HP_po_walce, EXP_gracza_aktualny
                else:
                    print("Czy chcesz kontynuować walkę ? (t/n)")
                    while True:
                        kontynuacja = input()
                        if kontynuacja == "t":
                            break
                        elif kontynuacja == "n":
                            print("Nie możesz uciec last bossowi, musisz walczyć do końca!!")
                            break
                        else:
                            print("wpisz 't' lub 'n'")
        else:
            input()
            print("Wybierz czy chcesz walczyć czy uciekać? (walcz/uciekaj): ")
            while True:
                akcja = input()
                while akcja == ("uciekaj") or akcja == ("walcz") or akcja == ("n") or akcja == ("s") or akcja == (
                "e") or akcja == ("w"):
                    if akcja == "walcz":
                        print("Rozpoczynasz walke...")
                        input()
                        HP_potwora_maksymalne = HP_potwora
                        while (HP_gracza >= 1):
                            if flag == "war":
                                damage_zadane = random.randrange(1, 5) + Bonus_DMG
                            elif flag == "mag":
                                damage_zadane = random.randrange(1, 3) + Bonus_DMG
                            elif flag == "asa":
                                damage_zadane = random.randrange(1, 7) + Bonus_DMG
                            HP_potwora = HP_potwora - damage_zadane
                            HP_gracza = HP_gracza - dmg_potwora
                            naloz_gracz = self.nakladka_klimat(HP_gracza, HP_maksymalne)
                            naloz_potwor = self.nakladka_klimat(HP_potwora, HP_potwora_maksymalne)
                            print("Zadales przeciwnikowi obrażenia i jest %s" % naloz_potwor)
                            print("Przeciwnik uderzył Cie i jesteś %s" % naloz_gracz)
                            if HP_gracza <= 0:
                                print("Giniesz - GAME OVER ! ! !")
                                input()
                                self.GAME_OVER()
                                break
                            elif HP_potwora <= 0:
                                print("Wygrales walke!")
                                # trofea_fun(HP_potwora_maksymalne)
                                input()
                                HP_po_walce = HP_gracza
                                EXP_gracza_aktualny += EXP_potwora
                                return HP_po_walce, EXP_gracza_aktualny
                            else:
                                print("Czy chcesz kontynuować walkę ? (t/n)")
                                while True:
                                    kontynuacja = input()
                                    if kontynuacja == "t":
                                        break
                                    elif kontynuacja == "n":
                                        proba_ucieczki = random.randrange(1, 101)
                                        if proba_ucieczki >= 20:
                                            print("Udało Ci sie uciec!")
                                            return HP_gracza, EXP_gracza_aktualny
                                        else:
                                            print("Wrog odciol Ci drogę!")
                                            kontynuacja == "t"
                                            break
                                    else:
                                        print("wpisz 't' lub 'n'")
                        break
                    elif akcja == "uciekaj" or akcja == "n" or akcja == "e" or akcja == "w" or akcja == "s":
                        proba_ucieczki = random.randrange(1, 100)
                        if proba_ucieczki >= 20:
                            print("Udało Ci sie uciec!")
                            return HP_gracza, EXP_gracza_aktualny
                        else:
                            print("Wrog odciol Ci drogę!")
                            akcja = "walcz"
                else:
                    print("Wpisz poprawnie 'walcz' lub 'uciekaj'")

    # -------------------support function--------------------------------------------------#
    def nakladka_klimat(self, HP, HP_max):
        dic = ["Pełnia zdrowia", "Lekko ranny", "Średnio ranny", "Ciężko ranny", "Prawie martwy", "Martwy"]
        if HP == HP_max:
            return dic[0]
        elif HP < HP_max and HP >= 0.75 * HP_max:
            return dic[1]
        elif HP < 0.75 * HP_max and HP >= 0.5 * HP_max:
            return dic[2]
        elif HP < 0.5 * HP_max and HP >= 0.25 * HP_max:
            return dic[3]
        elif HP < 0.25 * HP_max and HP >= 1:
            return dic[4]
        else:
            return dic[5]

    def porownanie_HP_HPmax(self, HP_akt, HP_max):
        if HP_akt >= HP_max:
            HP_akt = HP_max
        return HP_akt, HP_max

    def trofea_fun(self, HP_max):
        if HP_max == 2:
            trofea_text = "\nPokonales szczura"
        elif HP_max == 4:
            trofea_text = "\nPokonales goblina"
        elif HP_max == 8:
            trofea_text = "\nPokonales orka"
        elif HP_max == 50:
            trofea_text = "\nPokonales minibossa"
        else:
            trofea_text = "\nPokonales Last Bossa"

        trofea = open("trofea_File.txt", "a")
        trofea.write(trofea_text)
        trofea.close()

    def GAME_OVER(self):
        while True:
            print("Czy chcesz zagrac jeszcze raz? (tak/nie): ")
            ostatni_wybor = input()
            if ostatni_wybor == "tak":
                return self.main()
            elif ostatni_wybor == "nie":
                while True:
                    print("Game Over")
                    sys.exit()
            else:
                print("Wybrałes failowo, wybierz jeszcze raz")

    # --------------------------------lokacje-----------------------------------------#
    def top_left(self, aktualny_status):
        aktualny_status = self.spotkanie(aktualny_status)
        aktualny_status = self.level(aktualny_status)
        self.wywolaj_status(aktualny_status)
        print("Znajdujesz się w północno zachodniej czesci lochu")
        print("Gdzie idziesz? Mozliwe wyjscia polodnie(s) i wschod(e)")
        idz = input()
        while (idz != "e" and idz != "s"):
            print("wybrales failowo, wybierz jeszcze raz (e/s)")
            idz = input()
        else:
            if idz == 's':
                return self.left(aktualny_status)
            elif idz == "e":
                return self.top(aktualny_status)

    def top(self, aktualny_status):
        aktualny_status = self.spotkanie(aktualny_status)
        aktualny_status = self.level(aktualny_status)
        self.wywolaj_status(aktualny_status)
        print("Znajdujesz się w północnej czesci lochu")
        print("Gdzie idziesz? Mozliwe wyjscia polodnie(s) i wschod(e) i zachod(w)")
        idz = input()
        while (idz != "s" and idz != "e" and idz != "w"):
            print("wybrales failowo, wybierz jeszcze raz (s/e/w)")
            idz = input()
        else:
            if idz == 's':
                return self.central(aktualny_status)
            elif idz == "e":
                return self.top_right(aktualny_status)
            elif idz == "w":
                return self.top_left(aktualny_status)

    def top_right(self, aktualny_status):
        aktualny_status = self.spotkanie(aktualny_status)
        aktualny_status = self.level(aktualny_status)
        self.wywolaj_status(aktualny_status)
        print("Znajdujesz się w północno wschodniej czesci lochu")
        print("Gdzie idziesz? Mozliwe wyjscia polodnie(s) i zachod(w)")
        idz = input()
        while (idz != "w" and idz != "s"):
            print("wybrales failowo, wybierz jeszcze raz (w/s)")
            idz = input()
        else:
            if idz == 's':
                return self.right(aktualny_status)
            elif idz == "w":
                return self.top_left(aktualny_status)

    def left(self, aktualny_status):
        aktualny_status = self.spotkanie(aktualny_status)
        aktualny_status = self.level(aktualny_status)
        self.wywolaj_status(aktualny_status)
        print("Znajdujesz się w zachodniej czesci lochu")
        print("Gdzie idziesz? Mozliwe wyjscia polodnie(s) i polnoc(n) i wschod(e)")
        idz = input()
        while (idz != "n" and idz != "e" and idz != "s"):
            print("wybrales failowo, wybierz jeszcze raz (n/e/s)")
            idz = input()
        else:
            if idz == 's':
                return self.bot_left(aktualny_status)
            elif idz == "e":
                return self.central(aktualny_status)
            elif idz == "n":
                return self.top_left(aktualny_status)

    def central(self, aktualny_status):
        aktualny_status = self.spotkanie(aktualny_status)
        aktualny_status = self.level(aktualny_status)
        self.wywolaj_status(aktualny_status)
        print("Znajdujesz się w centrum lochu czesci lochu")
        print("Gdzie idziesz? Mozliwe wyjscia polodnie(s) i polnoc(n) i wschod(e) i zachod(w)")
        idz = input()
        while (idz != "w" and idz != "n" and idz != "e" and idz != "s"):
            print("wybrales failowo, wybierz jeszcze raz (n/w/e/s)")
            idz = input()
        else:
            if idz == "s":
                return self.bot(aktualny_status)
            elif idz == "w":
                return self.left(aktualny_status)
            elif idz == "n":
                return self.top(aktualny_status)
            elif idz == "e":
                return self.right(aktualny_status)

    def right(self, aktualny_status):
        aktualny_status = self.spotkanie(aktualny_status)
        aktualny_status = self.level(aktualny_status)
        self.wywolaj_status(aktualny_status)
        print("Znajdujesz się w wschodniej czesci lochu")
        print("Gdzie idziesz? Mozliwe wyjscia polodnie(s) i polnoc(n) i zachod(w)")
        idz = input()
        while (idz != "w" and idz != "n" and idz != "s"):
            print("wybrales failowo, wybierz jeszcze raz (n/w/s)")
            idz = input()
        else:
            if idz == 's':
                return self.bot_right(aktualny_status)
            elif idz == "w":
                return self.central(aktualny_status)
            elif idz == "n":
                return self.top_right(aktualny_status)

    def bot_left(self, aktualny_status):
        aktualny_status = self.spotkanie(aktualny_status)
        aktualny_status = self.level(aktualny_status)
        self.wywolaj_status(aktualny_status)
        print("Znajdujesz się w polodniowo zachodniej czesci lochu")
        print("Gdzie idziesz? Mozliwe wyjscia polnoc(n) i wschod(e)")
        idz = input()
        while (idz != "e" and idz != "n"):
            print("wybrales failowo, wybierz jeszcze raz (n/e)")
            idz = input()
        else:
            if idz == 'n':
                return self.left(aktualny_status)
            elif idz == "e":
                return self.bot(aktualny_status)

    def bot(self, aktualny_status):
        print("Znajdujesz się w polodniowej czesci lochu")
        print("Gdzie idziesz? Mozliwe wyjscia polnoc(n) i zachod(w) i wschod(e)")
        idz = input()
        while (idz != "w" and idz != "n" and idz != "e"):
            print("wybrales failowo, wybierz jeszcze raz (n/w/e)")
            idz = input()
        else:
            if idz == 'n':
                return self.central(aktualny_status)
            elif idz == "w":
                return self.bot_left(aktualny_status)
            elif idz == "e":
                return self.bot_right(aktualny_status)

    def bot_right(self, aktualny_status):
        aktualny_status = self.spotkanie(aktualny_status)
        aktualny_status = self.level(aktualny_status)
        self.wywolaj_status(aktualny_status)
        print("Znajdujesz się w polodniowo wschodniej czesci lochu")
        print("Gdzie idziesz? Mozliwe wyjscia polnoc(n) i zachod(w)")
        idz = input()
        while (idz != "w" and idz != "n"):
            print("wybrales failowo, wybierz jeszcze raz (n/w)")
            idz = input()
        else:
            if idz == 'n':
                return self.right(aktualny_status)
            elif idz == "w":
                return self.bot(aktualny_status)

#======================inicjalizacja okna===============================#
print("Witaj w prostym RPGU")
okno = tkinter.Tk()
okno.resizable(width=False, height=False)
okno.geometry("1024x768")

app = Window(okno)
app.init_text("Testowo")

okno.mainloop()
