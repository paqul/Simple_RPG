from __future__ import print_function
import random
import sys
import timeit
# global HP_gracza_aktualne
# global EXP_gracza_aktualny
global Level_gracza_aktualny
global Bonus_DMG
global HP_maksymalne
# global HP_po_starciu

#--------------------------------lokacje-----------------------------------------#
def top_left(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag):
    wywolaj_status(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
    print ("Znajdujesz się w północno zachodniej czesci lochu")
    print ("Gdzie idziesz? Mozliwe wyjscia polodnie(s) i wschod(e)")
    idz = input()
    while(idz != "e" and idz != "s"):
        print("wybrales failowo, wybierz jeszcze raz (e/s)")
        idz = input()
    else:
        if idz == 's':
            return left(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
        elif idz == "e":
            return top(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)

def top(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag):
    wywolaj_status(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
    print ("Znajdujesz się w północnej czesci lochu")
    print ("Gdzie idziesz? Mozliwe wyjscia polodnie(s) i wschod(e) i zachod(w)")
    idz = input()
    while(idz != "s" and idz != "e" and idz != "w"):
        print("wybrales failowo, wybierz jeszcze raz (s/e/w)")
        idz = input()
    else:
        if idz == 's':
            return central(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
        elif idz == "e":
            return top_right(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
        elif idz == "w":
            return top_left(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)

def top_right(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag):
    wywolaj_status(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
    print ("Znajdujesz się w północno wschodniej czesci lochu")
    print ("Gdzie idziesz? Mozliwe wyjscia polodnie(s) i zachod(w)")
    idz = input()
    while( idz != "w" and idz != "s"):
        print("wybrales failowo, wybierz jeszcze raz (w/s)")
        idz = input()
    else:
        if idz == 's':
            return right(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
        elif idz == "w":
            return top(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)


def left(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag):
    wywolaj_status(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
    input()
    print ("Znajdujesz się w zachodniej czesci lochu")
    print ("Gdzie idziesz? Mozliwe wyjscia polodnie(s) i polnoc(n) i wschod(e)")
    idz = input()
    while(idz != "n" and idz != "e" and idz != "s"):
        print("wybrales failowo, wybierz jeszcze raz (n/e/s)")
        idz = input()
    else:
        if idz == 's':
            return bot_left(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
        elif idz == "e":
            return central(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
        elif idz == "n":
            return top_left(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)

def central(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag):
    odpowiedz = spotkanie(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
    HP_gracza_aktualne = odpowiedz[0]
    EXP_gracza_aktualny = odpowiedz[1]
    Level_gracza_aktualny = odpowiedz[2]
    HP_maksymalne = odpowiedz[3]
    Bonus_DMG = odpowiedz[4]
    flag = odpowiedz[5]
    wywolaj_status(odpowiedz[0], odpowiedz[1], odpowiedz[2], odpowiedz[3], odpowiedz[4], odpowiedz[5])
    print ("Znajdujesz się w centrum lochu czesci lochu")
    print(odpowiedz)
    print ("Gdzie idziesz? Mozliwe wyjscia polodnie(s) i polnoc(n) i wschod(e) i zachod(w)")
    idz = input()
    while(idz != "w" and idz != "n" and idz != "e" and idz != "s"):
        print("wybrales failowo, wybierz jeszcze raz (n/w/e/s)")
        idz = input()
    else:
            if idz == "s":
                return bot(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
            elif idz == "w":
                return left(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
            elif idz == "n":
                return top(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
            elif idz == "e":
                return right(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)


def right(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag):
    wywolaj_status(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
    print ("Znajdujesz się w wschodniej czesci lochu")
    print ("Gdzie idziesz? Mozliwe wyjscia polodnie(s) i polnoc(n) i zachod(w)")
    idz = input()
    while(idz != "w" and idz != "n" and idz != "s"):
        print("wybrales failowo, wybierz jeszcze raz (n/w/s)")
        idz = input()
    else:
        if idz == 's':
            return bot_right(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
        elif idz == "w":
            return central(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
        elif idz == "n":
            return top_right(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)

def bot_left(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag):
    wywolaj_status(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
    print ("Znajdujesz się w polodniowo zachodniej czesci lochu")
    print ("Gdzie idziesz? Mozliwe wyjscia polnoc(n) i wschod(e)")
    idz = input()
    while(idz != "e" and idz != "n"):
        print("wybrales failowo, wybierz jeszcze raz (n/e)")
        idz = input()
    else:
        if idz == 'n':
            return left(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
        elif idz == "e":
            return bot(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)

def bot(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag):
    wywolaj_status(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
    print ("Znajdujesz się w polodniowej czesci lochu")
    print ("Gdzie idziesz? Mozliwe wyjscia polnoc(n) i zachod(w) i wschod(e)")
    idz = input()
    while(idz != "w" and idz != "n" and idz != "e"):
        print("wybrales failowo, wybierz jeszcze raz (n/w/e)")
        idz = input()
    else:
        if idz == 'n':
            return central(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
        elif idz == "w":
            return bot_left(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
        elif idz == "e":
            return bot_right(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)

def bot_right(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag):
    wywolaj_status(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
    print ("Znajdujesz się w polodniowo wschodniej czesci lochu")
    print ("Gdzie idziesz? Mozliwe wyjscia polnoc(n) i zachod(w)")
    idz = input()
    while(idz != "w" and idz != "n"):
        print("wybrales failowo, wybierz jeszcze raz (n/w)")
        idz = input()
    else:
        if idz == 'n':
            return right(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
        elif idz == "w":
            return bot(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)

#--------------------------------status-----------------------------------------#

class moj_status_poczatkowy(object):
    def __init__(self, damage, HP_gracza, EXP, level, Bonus_DMG, HP_maksymalne, flag):
        self.damage = damage
        self.HP_gracza = HP_gracza
        self.EXP = EXP
        self.level = level
        self.Bonus_DMG = Bonus_DMG
        self.HP_maksymalne = HP_maksymalne
        self.flag = flag

    def display_status(self):
        print("Twoje HPeki = %d, natomiast Damage jaki zadajesz to DMG = %d" % (self.HP_gracza, self.damage))


class moj_status(moj_status_poczatkowy):
    def __init__(self, damage, HP_gracza, EXP, level):
        self.damage = damage
        self.HP_gracza = HP_gracza
        self.EXP = EXP
        #self.level = level
    def stat(self):
        print("Twoje HP = $d, a twoj DMG = %d" % (self.HP_gracza, self.damage))
    def get_status(self):
        print("WTF")
        return self.HP_gracza

def wybor_postaci():
    counter = 0
    while True:
        player = input()
        if player == "woj":
            return warrior()
        elif player == "mag":
            return mage()
        else:
            print("fail - musisz wpisac 'woj' lub 'mag' w zaleznosci czym chcesz grac")
            counter += 1
            if counter == 3:
                print("Wybacz, ale jesli nie umiesz postepowac wg instukcji to nie chce z tobą wspolpracowac - Ponad 3 razy SFAILOWALES!")
                input()
                GAME_OVER()

def warrior():
    print("Twoje statystyki to: ")
    HP = 10
    HP_maksymalne = 10
    print("HP: %d /" % HP, HP_maksymalne)
    damage = random.randrange(1, 5)
    print ("Obrazenia jakie zadajessz to 1 - 4, ponieważ masz miecz")
    EXP = 0
    level = 1
    Bonus_DMG = 0
    flag = "war"
    return damage, HP, EXP, level, Bonus_DMG, HP_maksymalne, flag

def mage():
    print("Twoje statystyki to: ")
    HP = 4
    HP_maksymalne = 4
    print("HP: %d /" % HP, HP_maksymalne)
    damage = random.randrange(1, 3)
    print("Obrazenia jakie zadajessz to 1 - 2, uzyżywając magii")
    print("Ale ze wzrostem twojej mocy twoje czary staja sie bardziej potezne")
    damage_spell = 99
    EXP = 0
    level = 1
    Bonus_DMG = 0
    flag = "mag"
    return damage, HP, EXP, level, Bonus_DMG, HP_maksymalne, flag, damage_spell

def wywolaj_status(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag):
    print("|--Klasa--|--LVL--|--HP --|--HPmax--|--Exp --|--Damage zadawany--|")
    if flag == "war":
        print("|--",flag,"--|--",Level_gracza_aktualny,"--|--",HP_gracza_aktualne,"--|--",HP_maksymalne,"--|--",EXP_gracza_aktualny,"--|-----", 1+Bonus_DMG,"-",4+Bonus_DMG,"-------|")
    elif flag == "mag":
        print("|--",flag,"--|--",Level_gracza_aktualny,"--|--",HP_gracza_aktualne,"--|--",HP_maksymalne,"--|--",EXP_gracza_aktualny,"--|-----", 1+Bonus_DMG,"-",2+Bonus_DMG,"------|")
    print("|---------|-------|-------|---------|--------|-------------------|")
    input()
    return

def level(EXP_gracza_aktualny, flag):
    if flag == "war":
        if EXP_gracza_aktualny < 50:
            # print("Twoj poziom to 1")
            Level_gracza_aktualny = 1
            HP_maksymalne = 10
            Bonus_DMG = 0
            return Level_gracza_aktualny, EXP_gracza_aktualny, Bonus_DMG, HP_maksymalne
        elif EXP_gracza_aktualny >= 50 and EXP_gracza_aktualny < 100:
            # print("Twoj poziom to 2")
            Level_gracza_aktualny = 2
            HP_maksymalne = 15
            Bonus_DMG = 2
            return Level_gracza_aktualny, EXP_gracza_aktualny, Bonus_DMG, HP_maksymalne
        elif EXP_gracza_aktualny >= 100 and EXP_gracza_aktualny < 200:
            # print("Twoj poziom to 3")
            Level_gracza_aktualny = 3
            HP_maksymalne = 22
            Bonus_DMG = 4
            return Level_gracza_aktualny, EXP_gracza_aktualny, Bonus_DMG, HP_maksymalne
        elif EXP_gracza_aktualny >= 200 and EXP_gracza_aktualny < 350:
            # print("Twoj poziom to 4")
            Level_gracza_aktualny = 4
            HP_maksymalne = 30
            Bonus_DMG = 6
            return Level_gracza_aktualny, EXP_gracza_aktualny, Bonus_DMG, HP_maksymalne
        elif EXP_gracza_aktualny >= 350 and EXP_gracza_aktualny < 500:
            # print("Twoj poziom to 5 - Ostatni!")
            Level_gracza_aktualny = 5
            HP_maksymalne = 50
            Bonus_DMG = 10
            return Level_gracza_aktualny, EXP_gracza_aktualny, Bonus_DMG, HP_maksymalne
        else:
            # print("Twoj poziom to 6 - Secret!")
            Level_gracza_aktualny = 6
            HP_maksymalne = 100
            Bonus_DMG = 50
            return Level_gracza_aktualny, EXP_gracza_aktualny, Bonus_DMG, HP_maksymalne
    elif flag == "mag":
        if EXP_gracza_aktualny < 50:
            # print("Twoj poziom to 1")
            Level_gracza_aktualny = 1
            HP_maksymalne = 4
            Bonus_DMG = 0
            return Level_gracza_aktualny, EXP_gracza_aktualny, Bonus_DMG, HP_maksymalne
        elif EXP_gracza_aktualny >= 50 and EXP_gracza_aktualny < 100:
            # print("Twoj poziom to 2")
            Level_gracza_aktualny = 2
            HP_maksymalne = 8
            Bonus_DMG = 5
            return Level_gracza_aktualny, EXP_gracza_aktualny, Bonus_DMG, HP_maksymalne
        elif EXP_gracza_aktualny >= 100 and EXP_gracza_aktualny < 200:
            # print("Twoj poziom to 3")
            Level_gracza_aktualny = 3
            HP_maksymalne = 12
            Bonus_DMG = 10
            return Level_gracza_aktualny, EXP_gracza_aktualny, Bonus_DMG, HP_maksymalne
        elif EXP_gracza_aktualny >= 200 and EXP_gracza_aktualny < 350:
            # print("Twoj poziom to 4")
            Level_gracza_aktualny = 4
            HP_maksymalne = 16
            Bonus_DMG = 15
            return Level_gracza_aktualny, EXP_gracza_aktualny, Bonus_DMG, HP_maksymalne
        elif EXP_gracza_aktualny >= 350 and EXP_gracza_aktualny < 500:
            # print("Twoj poziom to 5 - Ostatni!")
            Level_gracza_aktualny = 5
            HP_maksymalne = 25
            Bonus_DMG = 25
            return Level_gracza_aktualny, EXP_gracza_aktualny, Bonus_DMG, HP_maksymalne
        else:
            # print("Twoj poziom to 6 - Secret!")
            Level_gracza_aktualny = 6
            HP_maksymalne = 50
            Bonus_DMG = 100
            return Level_gracza_aktualny, EXP_gracza_aktualny, Bonus_DMG, HP_maksymalne


#--------------------------------spotkanie -----------------------------------------#
def przejdz():
    return przejscie()

def przejscie(HP_gracza_aktualne, EXP_gracza_aktualny, Bonus_DMG, HP_maksymalne, flag):
    if EXP_gracza_aktualny >= 475:
        print("Czujesz że jesteś już wystarczająco poteżny by zmierzyć się z FINAL BOSSEM, Czy chcesz tego? (tak/nie)")
        while True:
            final_decision = input()
            if final_decision == "tak":
                print("... Z CALEGO lochu, spływa CALY kał w którym brodziłes az do teraz, w jedno miejsce znajdujace sie przed toba...")
                input()
                print("... I powstaje KAPITAN PLANETA, (to nie ta bajka - sorrki) - TO jest celowy BUG :)")
                input()
                print("... I powstaje FINAL BOSS - +K R Ó L O W A + K A L U !+")
                input()
                walka(HP_gracza_aktualne, 100, 5, EXP_gracza_aktualny, 1000000, Bonus_DMG, HP_maksymalne, flag)
                input()
                print("Udało Ci się pokonać Last Bossa i ukończyć prostego RPGa!!! Królowa Kału rozpada sie na milony fragmentów ekskrementu i znika...")
                input()
                print("Następuje silne trzesienie ziemi, a loch zaczyna się walić...")
                input()
                print("Przed tobą pojawia się portal - na ten moment wydaje się jedynym rozsądnym miejscem ucieczki z lochu.")
                print("Czy chcesz przejść przez portal? (tak/nie)")
                while True:
                    # t = timeit(30.0, wahania)
                    # t.start()
                    koncowka=input()
                    if koncowka == "tak":
                        print("Przechodzisz przez portal i znadujesz sie na powierzchni, na dziedzińcu w jakimś zamku...")
                        print("CONGRATULATIONS!")
                        print("Udało Ci się ukończyć prostego RPGa !!!!")
                        GAME_OVER()
                    elif koncowka == "nie":
                        print("Zbyt długo sie wachasz czy przejsc przez portal i dostajesz spadającymi skałami w łeb i umierasz...")
                        GAME_OVER()
                    else:
                        print("Wpisz 'tak' lub 'nie' ")
                return
            elif final_decision == "nie":
                return
            else:
                print("tak czy nie ?!")
    else:
        return

# def wahania():
#     print("Zbyt długo sie wachasz czy przejsc przez portal i dostajesz spadającymi skałami w łeb i umierasz...")
#     GAME_OVER()

def spotkanie(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag):
    EXP_gracza_aktualny = EXP_gracza_aktualny
    zaszlo = random.randrange(0,100)
    HP_gracza_aktualne = HP_gracza_aktualne
    EXP_gracza_aktualny = EXP_gracza_aktualny
    Level_gracza_aktualny = Level_gracza_aktualny
    HP_maksymalne = HP_maksymalne
    level_tab = level(EXP_gracza_aktualny, flag)
    Level_gracza_aktualny = level_tab[0]
    EXP_gracza_aktualny = level_tab[1]
    HP_maksymalne = level_tab[3]
    Bonus_DMG = level_tab[2]
    przejscie(HP_gracza_aktualne, EXP_gracza_aktualny, Bonus_DMG, HP_maksymalne, flag)
    if zaszlo > 50:
        print("Na swojej drodze spotykasz przeciwnika, przygotuj sie do walki !") #(",zaszlo,")")
        losuj_przeciwnika = random.randrange(1,101)
        # print("wylsoowales liczbe portwora dla liczby %d" % (losuj_przeciwnika))
        if losuj_przeciwnika >= 1  and losuj_przeciwnika <= 50:
            my_enemy = szczur()
            staty = my_enemy.status()
            Staty_po_starciu = walka(HP_gracza_aktualne,staty[1],staty[2],EXP_gracza_aktualny,staty[3],Bonus_DMG,HP_maksymalne,flag)
            HP_po_starciu=Staty_po_starciu[0]
            EXP_gracza_aktualny=Staty_po_starciu[1]
            #print("Aktualne twoje doswiadczenie %d" % EXP_gracza_aktualny)
            odpowiedz = porownanie_HP_HPmax(HP_po_starciu, HP_maksymalne)
            HP_po_starciu = odpowiedz[0]
            HP_maksymalne = odpowiedz[1]
            return HP_po_starciu, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag
        elif losuj_przeciwnika > 50 and losuj_przeciwnika < 90:
            my_enemy = goblin()
            staty = my_enemy.status()
            Staty_po_starciu = walka(HP_gracza_aktualne,staty[1],staty[2],EXP_gracza_aktualny,staty[3],Bonus_DMG,HP_maksymalne,flag)
            HP_po_starciu=Staty_po_starciu[0]
            EXP_gracza_aktualny=Staty_po_starciu[1]
            #print("Aktualne twoje doswiadczenie %d" % EXP_gracza_aktualny)
            odpowiedz = porownanie_HP_HPmax(HP_po_starciu, HP_maksymalne)
            HP_po_starciu = odpowiedz[0]
            HP_maksymalne = odpowiedz[1]
            return HP_po_starciu, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag
        elif losuj_przeciwnika == 100:
            my_enemy = towdi()
            staty = my_enemy.status()
            Staty_po_starciu = walka(HP_gracza_aktualne,staty[1],staty[2],EXP_gracza_aktualny,staty[3],Bonus_DMG,HP_maksymalne,flag)
            HP_po_starciu=Staty_po_starciu[0]
            EXP_gracza_aktualny=Staty_po_starciu[1]
            #print("Aktualne twoje doswiadczenie %d" % EXP_gracza_aktualny)
            odpowiedz = porownanie_HP_HPmax(HP_po_starciu, HP_maksymalne)
            HP_po_starciu = odpowiedz[0]
            HP_maksymalne = odpowiedz[1]
            return HP_po_starciu, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag
        else:
            my_enemy = ork()
            staty = my_enemy.status()
            Staty_po_starciu = walka(HP_gracza_aktualne,staty[1],staty[2],EXP_gracza_aktualny,staty[3],Bonus_DMG,HP_maksymalne,flag)
            HP_po_starciu=Staty_po_starciu[0]
            EXP_gracza_aktualny=Staty_po_starciu[1]
            #print("Aktualne twoje doswiadczenie %d" % EXP_gracza_aktualny)
            odpowiedz = porownanie_HP_HPmax(HP_po_starciu, HP_maksymalne)
            HP_po_starciu = odpowiedz[0]
            HP_maksymalne = odpowiedz[1]
            return HP_po_starciu, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag
    elif zaszlo > 2 and zaszlo <= 50:
        jaki_mix = random.randrange(0,101)
        #print("Okreslenie rodzaju miksturky: %d" % jaki_mix)
        if jaki_mix < 50:
            #print("Znajdujesz małą miksturke leczącą, która leczy Cie za 2 punkty życia")
            print("Znajdujesz małą miksturke leczącą, która odrobinę poprawia twój stan zdrowia")
            input()
            level_tab=level(EXP_gracza_aktualny, flag)
            HP_maksymalne = level_tab[3]
            elixir = mikstura()
            Lecz = elixir.mala_mix()
            HP_gracza_aktualne += Lecz[1]
            odpowiedz1 = porownanie_HP_HPmax(HP_gracza_aktualne, HP_maksymalne)
            HP_gracza_aktualne = odpowiedz1[0]
            HP_maksymalne = odpowiedz1[1]
            #print("AKUTALNE ZDROWIE %d" % HP_gracza_aktualne)
            return HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag
        elif jaki_mix >= 50 and jaki_mix< 90:
            #print("Znajdujesz miksturke leczącą która leczy Cie za 4 punkty życia")
            print("Znajdujesz miksturke leczącą, która Cie leczy")
            input()
            level_tab=level(EXP_gracza_aktualny, flag)
            HP_maksymalne = level_tab[3]
            elixir = mikstura()
            Lecz = elixir.normalna_mix()
            HP_gracza_aktualne += Lecz[1]
            odpowiedz = porownanie_HP_HPmax(HP_gracza_aktualne, HP_maksymalne)
            HP_gracza_aktualne = odpowiedz[0]
            HP_maksymalne = odpowiedz[1]
            #print("AKUTALNE ZDROWIE %d" % HP_gracza_aktualne)
            return HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag
        else:
            #print("Znajdujesz DUŻĄ miksturke leczącą która leczy Cie za 10 punkty życia")
            print("Znajdujesz dużą miksture leczącą, która znacząco poprawia twój stan zdrowia")
            input()
            level_tab=level(EXP_gracza_aktualny, flag)
            HP_maksymalne = level_tab[3]
            elixir = mikstura()
            Lecz = elixir.duza_mix()
            HP_gracza_aktualne += Lecz[1]
            odpowiedz = porownanie_HP_HPmax(HP_gracza_aktualne, HP_maksymalne)
            HP_gracza_aktualne = odpowiedz[0]
            HP_maksymalne = odpowiedz[1]
            #print("AKUTALNE ZDROWIE %d" % HP_gracza_aktualne)
            return HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag
    else:
        print("Wchodzisz do nowego obszaru i nic sie nie dzieje")#(",zaszlo,")")
        return HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag

def porownanie_HP_HPmax(HP_akt, HP_max):
    if HP_akt >= HP_max:
        HP_akt = HP_max
        return HP_akt, HP_max
    else:
        HP_akt = HP_akt
        return HP_akt, HP_max

def GAME_OVER():
    while True:
        print("Czy chcesz zagrac jeszcze raz? (tak/nie): ")
        ostatni_wybor = input()
        if ostatni_wybor == "tak":
            return main()
        elif ostatni_wybor == "nie":
            while True:
                print("Game Over")
                sys.exit()
        else:
            print("Wybrałes failowo, wybierz jeszcze raz")
#-------------------przeciwnicy--------------------------------------------------#
class enemy(object):
    HPmax = 100
    dmgmax = 10
    def __init__(self, HP, dmg):
        self.HP = HP
        self.dmg = dmg

class goblin(enemy):
    def __init__(self):
        self.name = "goblin"
        self.HP = 4
        self.dmg = 1
        self.EXP = 8
        print("Spotykasz %sa !" % (self.name))
        #print("Spotykasz %sa ktory ma %d punktow zycia oraz bije za %d, EXP za szczura to %d" % (self.name, self.HP, self.dmg, self.EXP))
    def status(self):
        return (self.name, self.HP, self.dmg, self.EXP)

class ork(enemy):
    def __init__(self):
        self.name = "ork"
        self.HP = 8
        self.dmg = random.randrange(2,5)
        self.EXP = 20
        print("Spotykasz %sa !" % (self.name))
        #print ("Spotykasz %sa ktory ma %d punktow zycia oraz bije za %d, EXP za szczura to %d" % (self.name, self.HP, self.dmg, self.EXP))
    def status(self):
        return (self.name, self.HP, self.dmg, self.EXP)

class szczur(enemy):
    def __init__(self):
        self.name = "szczur"
        self.HP = 2
        self.dmg = 1
        self.EXP = 2
        print("Spotykasz %sa !" % (self.name))
        #print ("Spotykasz %sa ktory ma %d punktow zycia oraz bije za %d, EXP za szczura to %d" % (self.name, self.HP, self.dmg, self.EXP))
    def status(self):
        return (self.name, self.HP, self.dmg, self.EXP)

class towdi(enemy):
    def __init__(self):
        self.name = "Tołdi Kału tzw. wierny sługus Last Bossa"
        self.HP = 50
        self.dmg = random.randrange(4,11)
        self.EXP = 500
        print("Spotykasz %sa !" % (self.name))
        #print ("Spotykasz %s ktory ma %d punktow zycia oraz bije za %d, EXP za szczura to %d" % (self.name, self.HP, self.dmg, self.EXP))
    def status(self):
        return (self.name, self.HP, self.dmg, self.EXP)

class mikstura(object):
    def __init__(self):
        self.mala = "mala"
        self.HPregen_mala = 2
        self.normalna = "normalna"
        self.HPregen_normalna = 4
        self.duza = "duza"
        self.HPregen_duza = 10
    def mala_mix(self):
        return(self.mala, self.HPregen_mala)
    def normalna_mix(self):
        return(self.normalna, self.HPregen_normalna)
    def duza_mix(self):
        return(self.duza, self.HPregen_duza)



#------------------------------------walka------------------------------#
def walka(HP_gracza,HP_potwora,dmg_potwora,EXP_gracza_aktualny,EXP_potwora,Bonus_DMG,HP_maksymalne,flag):
    if HP_potwora > 99:
        print("Rozpoczynasz walke...")
        input()
        # print("Twoje aktualne zdrowie to: %d" % HP_gracza)
        while (HP_gracza >= 1):
            if flag == "war":
                damage_zadane = random.randrange(1, 5) + Bonus_DMG
            elif flag == "mag":
                damage_zadane = random.randrange(1, 3) + Bonus_DMG
            HP_potwora = HP_potwora - damage_zadane
            print("Zadales przeciwnikowi %d HP i zostalo mu $d zycia" % damage_zadane, HP_potwora)
            HP_gracza = HP_gracza - dmg_potwora
            print("Przeciwnik uderzył Cie za %d HP i zostalo tobie $d zycia" % dmg_potwora, HP_gracza)
            if HP_gracza <= 0:
                print("GAME OVER ! ! !")
                GAME_OVER()
                break
            elif HP_potwora <= 0:
                print("Wygrales walke!")
                input()
                HP_po_walce = HP_gracza
                EXP_gracza_aktualny += EXP_potwora
                return HP_po_walce, EXP_gracza_aktualny
            else:
                while True:
                    kontynuacja = input()
                    if kontynuacja == "t":
                        break
                    elif kontynuacja == "n":
                        print("Nie możesz uciec last bossowi, musisz walczyć do końca!!")
                        break
                    else:
                        print("wpisz 't' lub 'n'")



    else:
        input()
        print("Wybierz czy chcesz walczyć czy uciekać? (walcz/uciekaj): ")
        while True:
            akcja = input()
            while akcja == ("uciekaj") or akcja == ("walcz") or akcja == ("n") or akcja == ("s") or akcja == ("e") or akcja == ("w"):
                if akcja == "walcz":
                    print("Rozpoczynasz walke...")
                    input()
                    #print("Twoje aktualne zdrowie to: %d" % HP_gracza)
                    while (HP_gracza >= 1):
                        if flag == "war":
                            damage_zadane = random.randrange(1, 5) + Bonus_DMG
                        elif flag == "mag":
                            damage_zadane = random.randrange(1, 3) + Bonus_DMG
                        HP_potwora = HP_potwora - damage_zadane
                        print("Zadales przeciwnikowi %d obrażeń i zostalo mu"% damage_zadane, "%d życia" %  HP_potwora)
                        HP_gracza = HP_gracza - dmg_potwora
                        print("Przeciwnik uderzył Cie za %d obrażeń i zostalo tobie" % dmg_potwora, "%d życia" % HP_gracza)
                        if HP_gracza <= 0:
                            print ("Giniesz - GAME OVER ! ! !")
                            input()
                            GAME_OVER()
                            break
                        elif HP_potwora <= 0:
                            print("Wygrales walke!")
                            input()
                            HP_po_walce = HP_gracza
                            EXP_gracza_aktualny += EXP_potwora
                            return HP_po_walce, EXP_gracza_aktualny
                        else:
                            print("Czy chcesz kontynuować walkę ? (t/n)")
                            while True:
                                kontynuacja = input()
                                if kontynuacja == "t":
                                    break
                                elif kontynuacja == "n":
                                    proba_ucieczki = random.randrange(1, 100)
                                    #print("Wyrzuciles: %d na ucieczke" % proba_ucieczki)
                                    if proba_ucieczki >= 20:
                                        print("Udało Ci sie uciec!")
                                        return HP_gracza, EXP_gracza_aktualny
                                    else:
                                        print("Wrog odciol Ci drogę!")
                                        kontynuacja == "t"
                                        break
                                else:
                                    print("wpisz 't' lub 'n'")
                    #print("Aktualne twoje doswiadczenie %d" % EXP_gracza_aktualny)
                    break
                elif akcja == "uciekaj" or akcja == "n" or akcja == "e" or akcja == "w" or akcja == "s":
                    proba_ucieczki = random.randrange(1, 100)
                    #print("Wyrzuciles: %d na ucieczke" % proba_ucieczki)
                    if proba_ucieczki >= 20:
                        print("Udało Ci sie uciec!")
                        return HP_gracza, EXP_gracza_aktualny
                    else:
                        print("Wrog odciol Ci drogę!")
                        akcja = "walcz"
            else:
                print("Wpisz poprawnie 'walcz' lub 'uciekaj'")

#-------------------------GRA-------------------------------------------#


print("Witaj w prostym RPGU")
def main():
    print("Chcesz zagrac wojownikiem czy magiem ? (woj/mag):")
    staty_gracza=wybor_postaci()
    aktualny_status = moj_status_poczatkowy(staty_gracza[0], staty_gracza[1], staty_gracza[2], staty_gracza[3], staty_gracza[4], staty_gracza[5], staty_gracza[6])
    #print("DEBUG statystyk (dmg, hp aktualne, exp, lvl, bonus dmg, hp max, KTO?)" ,staty_gracza[0], staty_gracza[1], staty_gracza[2], staty_gracza[3], staty_gracza[4], staty_gracza[5], staty_gracza[6])
    HP_gracza_aktualne = aktualny_status.HP_gracza
    EXP_gracza_aktualny = aktualny_status.EXP
    Level_gracza_aktualny = aktualny_status.level
    Bonus_DMG = aktualny_status.Bonus_DMG
    HP_maksymalne = aktualny_status.HP_maksymalne
    flag = aktualny_status.flag
    EXP_gracza_aktualny = 49
    input()
    print ("Rozpoczynasz GRE - prostego RPGA")
    print("Czy chcesz wskoczyć do studni prowadzącej do mrocznego lochu gdzie będziesz brodził w kale po kostki do samego końca? (tak/nie)")
    while True:
        decyzja = input()
        if decyzja == "nie":
            print("Jestes rozsadnym czlowiekiem, nie ma sensu sie wkurzać i męczyć...")
            input()
            print("Może nie udało Ci się pokonać Last Bossa, ale udało Ci się ukończyć prostego RPGa bez stesów i większego wysiłku")
            print("CONGRATULATIONS!")
            break
        elif decyzja == "tak":
            bot(HP_gracza_aktualne, EXP_gracza_aktualny, Level_gracza_aktualny, HP_maksymalne, Bonus_DMG, flag)
        else:
            print("Wpisz poprawnie słowo 'tak' lub slowo 'nie', Chcesz tam wchodzić czy nie?!")
    GAME_OVER()

main()

############################### B U ! G I #########################################
# 1. Zmienic przedzialy znalezienia miksturki i walki z prrzeciwnikami
# 2. Zmienic HPeki z versji debugerskiej do versji relase
# 3. Zmienic poziom Expa do wytriggerowania final bossa lub wywolywac gso z palca
